# ============LICENSE_START==========================================
# ===================================================================
#  Copyright (c) 2020 QCT
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#============LICENSE_END============================================

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dcae-datalake-feeder.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "dcae-datalake-feeder.labels" . | indent 4 }}
spec:
  hostname: dcae-datalake-feeder-feeder
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "dcae-datalake-feeder.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "dcae-datalake-feeder.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      initContainers:
      - command:
        - /root/job_complete.py
        args:
        - -j
        - {{ .Release.Name }}-dcae-datalake-feeder-dbinit-job
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: "{{ .Values.global.readinessRepository }}/{{ .Values.global.readinessImage }}"
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        name: datalake-readiness
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          #command: ["/bin/sh", "-c", "ls /etc/datalake/"]
          #command: ["/bin/sh", "-c", "java -jar ./feeder-1.0.0-SNAPSHOT.jar --spring.config.location=file:/tmp/application.properties"]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: HOSTNAME
            value: k8s-datalake
          - name: CONSUL_HOST
            value: consul
          - name: CONFIG_BINDING_SERVICE
            value: config-binding-service      
          ports:
            - name: http
              containerPort: 1680
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/datalake
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Release.Name }}-dcae-datalake-feeder-configmap
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
